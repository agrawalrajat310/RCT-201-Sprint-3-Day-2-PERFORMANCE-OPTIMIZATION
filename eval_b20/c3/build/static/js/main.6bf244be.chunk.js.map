{"version":3,"sources":["Context/AuthContext.jsx","Components/PrivateRoute.jsx","Components/Loader.jsx","Components/Pagination.jsx","Components/ProductItem.jsx","Components/ProductList.jsx","Routes/Dashboard.jsx","Routes/Home.jsx","Routes/Login.jsx","Routes/AllRoutes.jsx","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","initialState","isAuth","token","AuthContextProvider","children","useState","authState","setAuthState","Provider","value","loginUser","logoutUser","PrivateRoute","useContext","to","Loader","Pagination","totalPage","current","onChange","prev","disabled","onClick","currentPage","next","totalPagesElem","ProductItem","title","price","image","category","style","display","gap","justifyContent","alignItems","border","padding","marginBottom","flexDirection","src","alt","height","ProductList","products","map","data","id","Dashboard","isLoading","setIsLoading","page","setPage","setProducts","totalPages","setTotalPages","orderBy","setOrderBy","useEffect","getData","url","fetch","res","json","console","log","message","sorting","Home","className","user","email","password","Login","userID","setUserID","boolean","setBoolean","handleChange","e","target","name","handleSubmit","preventDefault","method","headers","body","JSON","stringify","onSubmit","type","placeholder","AllRoutes","path","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6bf244be.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { createContext } from \"react\";\nimport { useSearchParams } from \"react-router-dom\"\n\nexport const AuthContext = createContext();\n\nconst initialState = {\n    isAuth: false,\n    token: null\n}\n\nfunction AuthContextProvider({ children }) {\n    const [authState, setAuthState] = useState(initialState)\n\n    const loginUser = (token) => {\n        setAuthState({\n            ...authState,\n            isAuth: true,\n            token: token\n        })\n    }\n\n    const logoutUser = () => {\n        setAuthState(initialState)\n    }\n\n    return (\n        <AuthContext.Provider value={{authState, loginUser, logoutUser}}>\n            {children}\n            </AuthContext.Provider>\n    )\n}\n\nexport default AuthContextProvider;","import { useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\nfunction PrivateRoute({children}) {\n\n    const {authState} = useContext(AuthContext);\n\n    if(!authState.isAuth){\n        return <Navigate to={\"/login\"} />\n    }\n\n    return children;\n}\n\nexport default PrivateRoute;","function Loader() {\n  return <h3 data-testid=\"loading-container\">...Loading</h3>;\n}\n\nexport default Loader;\n","function Pagination({totalPage, current, onChange}) {\n  const prev = <button disabled={current===1} onClick={() => onChange(current-1)}\n   data-testid=\"prev-page\">PREV</button>;\n  const currentPage = <button data-testid=\"current-page\">{current}</button>;\n  const next = <button disabled={current===totalPage} onClick={() => onChange(current+1)} \n  data-testid=\"next-page\">NEXT</button>;\n  const totalPagesElem = (\n    <div>\n      Total Pages: <b data-testid=\"total-pages\">{totalPage}</b>{\" \"}\n    </div>\n  );\n  return (\n    <div data-testid=\"pagination-container\">\n      {prev}\n      {currentPage}\n      {next}\n      {totalPagesElem}\n    </div>\n  );\n}\n\nexport default Pagination;","import React from \"react\";\n\nconst ProductItem = ({title,price,image,category}) => {\n  return (\n    <div\n      data-testid=\"product-item\"\n      style={{\n        display: \"flex\",\n        gap: \"1rem\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        border: \"1px solid #ccc\",\n        padding: \"1rem\",\n        marginBottom: \"1rem\",\n        flexDirection: \"column\",\n      }}\n    >\n      <img src={image} alt=\"title\" data-testid=\"product-image\" height=\"100px\" />\n      <b data-testid=\"product-title\">{title}</b>\n      <span data-testid=\"product-price\">â‚¹ {price}</span>\n      <div style={{ display: \"flex\" }}>\n        <b data-testid=\"product-category\">{category}</b>\n      </div>\n    </div>\n  );\n};\nexport default ProductItem;","import React from \"react\";\nimport ProductItem from \"./ProductItem\";\n\n// create Product component which contains the list of ProductItem component\nconst ProductList = ({products=[]}) => {\n  return <div data-testid=\"products-container\">{products.map((data) => (\n    <ProductItem key={data.id}\n     title={data.title} \n     image={data.image} \n     price={data.price}\n     category={data.category} />\n  ))}</div>;\n};\n\n// export\nexport default ProductList;","import { useEffect } from \"react\";\nimport { useContext, useState } from \"react\";\nimport Loader from \"../Components/Loader\";\nimport Pagination from \"../Components/Pagination\";\nimport ProductList from \"../Components/ProductList\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\nfunction Dashboard() {\n  const { logoutUser, authState } = useContext(AuthContext);\n  const [isLoading, setIsLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [products, setProducts] = useState([]);\n  const [totalPages, setTotalPages] = useState(null);\n  const [orderBy, setOrderBy] = useState(\"asc\");\n\n  useEffect(() => {\n    getData(page, orderBy);\n  }, [page, orderBy]);\n\n  const getData = async (page, orderBy) => {\n    const url = `https://dbioz2ek0e.execute-api.ap-south-1.amazonaws.com/mockapi/get-products?page=${page}&limit=10&orderBy=${orderBy}`;\n\n    setIsLoading(true);\n    try {\n      let res = await fetch(url);\n      let data = await res.json();\n      setProducts(data.data);\n      setTotalPages(data.totalPages);\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      console.log(err.message);\n\n    }\n  };\n\n  const sorting = () => {\n    if (orderBy === \"asc\") {\n      setOrderBy(\"desc\");\n    } else {\n      setOrderBy(\"asc\");\n    }\n  };\n\n  return (\n    <div>\n      <h3>Dashboard</h3>\n      <div>\n        <button onClick={logoutUser} data-testid=\"logout-btn\">\n          Logout\n        </button>\n        <p>\n          Token:\n          <b data-testid=\"user-token\">{authState.token}</b>\n        </p>\n      </div>\n      <br />\n      <div data-testid=\"sort-container\">\n        <button\n          disabled={orderBy === \"asc\"}\n          onClick={sorting}\n          data-testid=\"low-to-high\">\n          Sort low to high\n        </button>\n        <button\n          disabled={orderBy === \"desc\"}\n          onClick={sorting}\n          data-testid=\"high-to-low\">\n          Sort high to low\n        </button>\n      </div>\n      <br />\n      <br />\n      <Pagination\n        totalPage={totalPages}\n        current={page}\n        onChange={(value) => setPage(value)}\n      />\n      {/* add Pagination component  */}\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        {/* Product Listing, remember to show loading indicator when API is loading */}\n\n        {isLoading ? <Loader /> : <ProductList products={products} />}\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import { Link } from \"react-router-dom\";\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <Link to=\"/login\">\n        <h3 data-testid=\"login-link\">Login Page</h3>\n      </Link>\n      <Link to=\"/dashboard\">\n        <h3 data-testid=\"home-link\">Home</h3>\n      </Link>\n    </div>\n  );\n}\nexport default Home;","import { useContext } from \"react\";\nimport { useId, useState } from \"react\";\nimport { Link, Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\nconst user = {\n  email: \"\",\n  password: \"\"\n}\n\nfunction Login() {\n\n  const [userID, setUserID] = useState(user);\n  const { authState, loginUser} = useContext(AuthContext);\n  const [boolean, setBoolean] = useState(false)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUserID({\n      ...userID,\n      [name]: value\n    })\n  }\n\n  const handleSubmit = async (e) => {\n    setBoolean(true);\n    e.preventDefault();\n    const url = `https://reqres.in/api/login`\n    try {\n\n      let res = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"Application/json\"\n        },\n        body: JSON.stringify({\n          email: userID.email,\n          password: userID.password\n        })\n      })\n\n      let data = await res.json()\n      loginUser(data.token)\n\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  if (authState.isAuth) {\n    return <Navigate to={\"/dashboard\"} />\n  }\n\n  // console.log(token, isAuth);\n\n  return (\n    <div className=\"login-page\">\n      <form onSubmit={handleSubmit} className=\"form\" data-testid=\"login-form\">\n        <div>\n          <label>\n            <input name=\"email\" value={userID.email} onChange={handleChange} \n            data-testid=\"email-input\" type=\"email\" placeholder=\"email\" />\n          </label>\n        </div>\n        <div>\n          <label>\n            <input name=\"password\" value={userID.password} onChange={handleChange}\n              data-testid=\"password-input\"\n              type=\"password\"\n              placeholder=\"password\"\n            />\n          </label>\n        </div>\n        <div>\n          <button disabled={boolean} data-testid=\"form-submit\" type=\"submit\">\n            SUBMIT\n          </button>\n        </div>\n      </form>\n      <div>\n        <Link className=\"message\" to=\"/\">\n          Go Back\n        </Link>\n      </div>\n    </div>\n  );\n}\nexport default Login;","import { Route, Routes } from \"react-router-dom\";\nimport PrivateRoute from \"../Components/PrivateRoute\";\nimport Dashboard from \"./Dashboard\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\n\nfunction AllRoutes() {\n  return <div>\n    {/* Add Home, Login and dashboard  */}\n    <Routes>\n      <Route path=\"/\" element={<Home/>}></Route>\n      <Route path=\"/login\" element={<Login/>}></Route>\n      <Route path=\"/dashboard\" element={\n      <PrivateRoute>\n        <Dashboard/>\n        </PrivateRoute>}>\n        </Route>\n        \n    </Routes>\n  </div>;\n}\n\nexport default AllRoutes;","import AllRoutes from \"./Routes/AllRoutes\";\nimport Home from \"./Routes/Home\";\n\nexport default function App() {\n  return <div className=\"App\">{/* add AllRoutes component */}\n  <AllRoutes/>\n  {/* <Home/> */}\n  </div>;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport AuthContextProvider from './Context/AuthContext';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}